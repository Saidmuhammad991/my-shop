// ========== –û–±—â–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ ==========
let products = JSON.parse(localStorage.getItem('products') || '[]');

// ========== –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤ ==========
function renderProducts() {
  const container = document.getElementById('product-list');
  if (!container) return;

  container.innerHTML = '';
  products.forEach(p => {
    const div = document.createElement('div');
    div.className = 'product';

    const media = p.image.startsWith("data:video")
      ? `<video src="${p.image}" controls width="100%"></video>`
      : `<img src="${p.image}" alt="${p.name}">`;

    div.innerHTML = `
      ${media}
      <h2>${p.name}</h2>
      <p>${p.price} —Å—É–º</p>
    `;
    container.appendChild(div);
  });
}

// ========== –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ==========
function addProduct() {
  const name = document.getElementById('name').value.trim();
  const price = document.getElementById('price').value.trim();
  const file = document.getElementById('file').files[0];

  if (!name || !price || !file) {
    alert("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ –≤–∏–¥–µ–æ");
    return;
  }

  const reader = new FileReader();
  reader.onload = function (e) {
    const imageData = e.target.result;

    products.push({ name, price, image: imageData });
    localStorage.setItem('products', JSON.stringify(products));
    renderProducts();
    renderAdminList();
    clearForm();
  };
  reader.readAsDataURL(file);
}

// ========== –£–¥–∞–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ ==========
function deleteProduct(index) {
  products.splice(index, 1);
  localStorage.setItem('products', JSON.stringify(products));
  renderProducts();
  renderAdminList();
}

// ========== –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∞–¥–º–∏–Ω–∫–µ ==========\\
function renderAdminList() {
  const list = document.getElementById('admin-list');
  if (!list) return;

  list.innerHTML = '';
  products.forEach((p, i) => {
    const li = document.createElement('li');
    li.innerHTML = `
      ${p.name} ‚Äì ${p.price} —Å—É–º
      <button onclick="deleteProduct(${i})">–£–¥–∞–ª–∏—Ç—å</button>
    `;
    list.appendChild(li);
  });
}

// ========== –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã ==========\\
function clearForm() {
  document.getElementById('name').value = '';
  document.getElementById('price').value = '';
  document.getElementById('file').value = '';
}

// ========== –ó–∞–ø—É—Å–∫ ==========\\
window.addEventListener('DOMContentLoaded', () => {
  renderProducts();
  renderAdminList();
});
function checkout() {
  const username = document.getElementById('tg-username').value.trim();

  if (!username.startsWith('@')) {
    alert("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram username (–Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å @)");
    return;
  }

  let message = `üõí –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç ${username}:\n\n`;
  cart.forEach(item => {
    message += `üì¶ ${item.name} ‚Äî ${item.price} —Å—É–º\n`;
  });

  const total = cart.reduce((sum, item) => sum + parseInt(item.price), 0);
  message += `\nüí∞ –ò—Ç–æ–≥–æ: ${total} —Å—É–º`;

  fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({
      chat_id: CHAT_ID,
      text: message
    })
  }).then(res => {
    if (res.ok) {
      alert("–ó–∞–∫–∞–∑ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ú—ã —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è –≤ Telegram ‚ù§Ô∏è");
      localStorage.removeItem('cart');
      cart = [];
      renderCart();
    } else {
      alert("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ üò¢");
    }
  });
}



//======================go go ========================//